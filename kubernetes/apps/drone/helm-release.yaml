apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &db drone-postgresql
  namespace: apps
spec:
  interval: 1h
  chart:
    spec:
      chart: postgresql
      version: 12.2.3
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system

  values:
    fullnameOverride: *db
    auth:
      postgresPassword: ${SECRET_WEBSERVICES_PASSWORD}

    primary:
      persistence:
        enabled: true
        existingClaim: drone-db

    resources:
      requests:
        cpu: 25m
        memory: 128M
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: drone
  namespace: apps
spec:
  interval: 1h
  chart:
    spec:
      # registryUrl=https://charts.drone.io
      chart: drone
      version: 0.6.4
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: drone-charts
        namespace: flux-system

  dependsOn:
  - name: drone-postgresql
    namespace: apps

  values:
    persistentVolume:
      enabled: false

    extraVolumes:
      - name: ca-certs
        hostPath:
          path: /etc/ssl/certs/ca-certificates.crt

    extraVolumeMounts:
      - name: ca-certs
        mountPath: /etc/ssl/certs/ca-certificates.crt
        readOnly: true

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        # traefik.ingress.kubernetes.io/router.middlewares: "networking-auth@kubernetescrd"
      hosts:
        - host: &host "drone.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host

    env:
      DRONE_DATABASE_DRIVER: postgres
      DRONE_DATABASE_DATASOURCE: postgres://postgres:${SECRET_WEBSERVICES_PASSWORD}@drone-postgresql.apps.svc/postgres?sslmode=disable
      DRONE_GIT_ALWAYS_AUTH: true
      DRONE_GITEA_CLIENT_ID: ${SECRET_DRONE_GITEA_CLIENT_ID}
      DRONE_GITEA_CLIENT_SECRET: ${SECRET_DRONE_GITEA_CLIENT_SECRET}
      DRONE_GITEA_SERVER: https://git.${SECRET_DOMAIN}
      DRONE_RPC_SECRET: ${SECRET_DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: drone.${SECRET_DOMAIN}
      DRONE_TLS_AUTOCERT: false
      DRONE_SERVER_PROTO: https
      DRONE_USER_CREATE: username:root,admin:true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: drone-runner-kube
  namespace: apps
spec:
  interval: 1h
  chart:
    spec:
      # registryUrl=https://charts.drone.io
      chart: drone-runner-kube
      version: 0.1.10
      sourceRef:
        kind: HelmRepository
        name: drone-charts
        namespace: flux-system

  dependsOn:
  - name: drone
    namespace: apps

  values:
    replicaCount: 1

    rbac:
      buildNamespaces:
      - apps

    extraVolumes:
      - name: ca-certs
        hostPath:
          path: /etc/ssl/certs/ca-certificates.crt

    extraVolumeMounts:
      - name: ca-certs
        mountPath: /etc/ssl/certs/ca-certificates.crt
        readOnly: true

    env:
      DRONE_NAMESPACE_DEFAULT: apps
      DRONE_RPC_PROTO: http
      DRONE_RUNNER_NAME: "drone-runner-kube"
      DRONE_RPC_HOST: "drone.apps:8080"
      DRONE_RPC_SECRET: ${SECRET_DRONE_RPC_SECRET}
      DRONE_RUNNER_ENVIRON: "GIT_SSL_NO_VERIFY:true"
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: drone-runner-docker
  namespace: apps
spec:
  interval: 1h
  chart:
    spec:
      # registryUrl=https://charts.drone.io
      chart: drone-runner-docker
      version: 0.6.1
      sourceRef:
        kind: HelmRepository
        name: drone-charts
        namespace: flux-system

  dependsOn:
  - name: drone
    namespace: apps

  values:
    replicaCount: 1

    env:
      DRONE_RPC_PROTO: https
      DRONE_RPC_SKIP_VERIFY: true
      DRONE_RUNNER_NAME: "drone-runner-docker"
      DRONE_RUNNER_CAPACITY: 2
      DRONE_RUNNER_NETWORKS: "docker-bridge"
      DRONE_RPC_HOST: "drone.${SECRET_DOMAIN}"
      DRONE_RPC_SECRET: ${SECRET_DRONE_RPC_SECRET}
      DRONE_RUNNER_VOLUMES: "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt"
      # DRONE_RUNNER_ENVIRON: "GIT_SSL_NO_VERIFY:true"
